rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  	match /users/{user_id} {
		allow read, write: if request.auth.uid == user_id;
		allow read: if request.auth.uid != null;
	}
	match /friend-requests/{recipient} {
		allow read, write: if request.auth.uid == recipient;
		allow create, update:
			if request.auth.uid in request.resource.data.sender;
		allow list;
	}
	match /private-requests/{user_id} {
		allow read, write: if request.auth.uid == user_id;
	}
	match /accepted-friends/{user_id} {
		allow read, write: if request.auth.uid == user_id;
		allow read: if request.auth.uid in resource.data.uids;
	}
	match /friendlists/{user_id} {
		allow read, write: if request.auth.uid == user_id;
	}
	match /groups/{group_id} {
		allow read, write: if resource.data.admins == null
			&& request.auth.uid in resource.data.members;
		allow read: if request.auth.uid in resource.data.members;
	  	allow create: if request.auth.uid != null;
		allow list;
		allow read, create, update:
			if request.resource.data.admins  == resource.data.admins
			&& request.resource.data.members == resource.data.members
			&& request.resource.data.image   == resource.data.image
			&& request.auth.uid in resource.data.members;
	  	allow read, write: if resource.data.admins != null
			&& request.atuh.uid in resource.data.admins;
		match /messages/{message} {
			allow read, write:
				if request.auth.uid in get(/databases/$(database)/documents/groups/$(group_id)).data.members;
		}
	}
	match /grouplists/{user_id} {
		allow read, write: if request.auth.uid == user_id;
	}
  }
}
